var DAT=DAT||{};
DAT.Globe=function(c,s){var r,n,t,e,y,z;function A(a,b,d,c,e){a=(90-a)*Math.PI/180;b=(180-b)*Math.PI/180;f.position.x=200*Math.sin(a)*Math.cos(b);f.position.y=200*Math.cos(a);f.position.z=200*Math.sin(a)*Math.sin(b);f.lookAt(l.position);f.scale.z=Math.max(d,.1);f.updateMatrix();for(d=0;d<f.geometry.faces.length;d++)f.geometry.faces[d].color=c;THREE.GeometryUtils.merge(e,f)}function K(a){a.preventDefault();c.addEventListener("mousemove",B,!1);c.addEventListener("mouseup",C,!1);c.addEventListener("mouseout",D,
!1);u.x=-a.clientX;u.y=a.clientY;v.x=t;v.y=e;c.style.cursor="move"}function B(a){y=-a.clientX;z=a.clientY;a=m/1E3;t=v.x+.005*(y-u.x)*a;e=v.y+.005*(z-u.y)*a;e=e>w?w:e;e=e<-w?-w:e}function C(a){c.removeEventListener("mousemove",B,!1);c.removeEventListener("mouseup",C,!1);c.removeEventListener("mouseout",D,!1);c.style.cursor="auto"}function D(a){c.removeEventListener("mousemove",B,!1);c.removeEventListener("mouseup",C,!1);c.removeEventListener("mouseout",D,!1)}function L(a){a.preventDefault();E&&x(.3*
a.wheelDeltaY);return!1}function M(a){switch(a.keyCode){case 38:x(100);a.preventDefault();break;case 40:x(-100),a.preventDefault()}}function N(a){h.aspect=window.innerWidth/window.innerHeight;h.updateProjectionMatrix();p.setSize(window.innerWidth,window.innerHeight)}function x(a){k-=a;k=1E3<k?1E3:k;k=350>k?350:k}function H(){requestAnimationFrame(H);x(O);r+=.1*(t-r);n+=.1*(e-n);m+=.3*(k-m);h.position.x=m*Math.sin(r)*Math.cos(n);h.position.y=m*Math.sin(n);h.position.z=m*Math.cos(r)*Math.cos(n);h.lookAt(l.position);
p.render(q,h)}s=s||{};var I=s.colorFn||function(a){var b=new THREE.Color;b.setHSL(.6-.5*a,1,.5);return b},P=s.imgDir||"",J={earth:{uniforms:{texture:{type:"t",value:null}},vertexShader:"varying vec3 vNormal;\nvarying vec2 vUv;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvUv = uv;\n}",fragmentShader:"uniform sampler2D texture;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvoid main() {\nvec3 diffuse = texture2D( texture, vUv ).xyz;\nfloat intensity = 1.05 - dot( vNormal, vec3( 0.0, 0.0, 1.0 ) );\nvec3 atmosphere = vec3( 1.0, 1.0, 1.0 ) * pow( intensity, 3.0 );\ngl_FragColor = vec4( diffuse + atmosphere, 1.0 );\n}"},
atmosphere:{uniforms:{},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec3 vNormal;\nvoid main() {\nfloat intensity = pow( 0.8 - dot( vNormal, vec3( 0, 0, 1.0 ) ), 12.0 );\ngl_FragColor = vec4( 1.0, 1.0, 1.0, 1.0 ) * intensity;\n}"}},h,q,p,F,G,l,f,E,O=0;z=y=0;var u={x:0,y:0};n=r=0;t=3*Math.PI/2;e=Math.PI/6;var v={x:0,y:0},m=1E5,k=1E5,w=Math.PI/
2;addBackground=function(a,b){b.color=b.color||16777215;var d=new THREE.Geometry;for(i=0;i<a.length;i+=3)lat=a[i],lng=a[i+1],size=0,A(lat,lng,size,b.color,d);d=new THREE.Mesh(d,new THREE.MeshBasicMaterial({color:b.color}));q.add(d)};addData=function(a,b){var d,c,e,f,g,h,k;b.animated=b.animated||!1;this.is_animated=b.animated;b.format=b.format||"magnitude";if("magnitude"===b.format)h=3,k=function(a,b){return I(a[b+2])};else if("legend"===b.format)h=4,k=function(a,b){return I(a[b+3])};else throw"error: format not supported: "+
b.format;if(b.animated){if(void 0===this._baseGeometry)for(this._baseGeometry=new THREE.Geometry,g=0;g<a.length;g+=h)d=a[g],c=a[g+1],f=k(a,g),e=0,A(d,c,e,f,this._baseGeometry);this._morphTargetId=void 0===this._morphTargetId?0:this._morphTargetId+1;b.name=b.name||"morphTarget"+this._morphTargetId}var l=new THREE.Geometry;for(g=0;g<a.length;g+=h)d=a[g],c=a[g+1],f=k(a,g),e=a[g+2],e*=200,A(d,c,e,f,l);b.animated?this._baseGeometry.morphTargets.push({name:b.name,vertices:l.vertices}):this._baseGeometry=
l};(function(){c.style.color="#fff";c.style.font="13px/20px Arial, sans-serif";var a,b;F=c.offsetWidth||window.innerWidth;G=c.offsetHeight||window.innerHeight;h=new THREE.PerspectiveCamera(30,F/G,1,1E4);h.position.z=m;q=new THREE.Scene;var d=new THREE.SphereGeometry(200,40,30);a=J.earth;b=THREE.UniformsUtils.clone(a.uniforms);b.texture.value=THREE.ImageUtils.loadTexture(P+"world.jpg");a=new THREE.ShaderMaterial({uniforms:b,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});l=new THREE.Mesh(d,
a);l.rotation.y=Math.PI;q.add(l);a=J.atmosphere;b=THREE.UniformsUtils.clone(a.uniforms);a=new THREE.ShaderMaterial({uniforms:b,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,side:THREE.BackSide,blending:THREE.AdditiveBlending,transparent:!0});l=new THREE.Mesh(d,a);l.scale.set(1.1,1.1,1.1);q.add(l);d=new THREE.CubeGeometry(.75,.75,1);d.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-.5));f=new THREE.Mesh(d);p=new THREE.WebGLRenderer({antialias:!0});p.setSize(F,G);p.domElement.style.position=
"absolute";c.appendChild(p.domElement);c.addEventListener("mousedown",K,!1);c.addEventListener("mousewheel",L,!1);document.addEventListener("keydown",M,!1);window.addEventListener("resize",N,!1);c.addEventListener("mouseover",function(){E=!0},!1);c.addEventListener("mouseout",function(){E=!1},!1)})();this.animate=H;this.__defineGetter__("time",function(){return this._time||0});this.__defineSetter__("time",function(a){var b=[],d=this.points.morphTargetDictionary,c;for(c in d)0>c.indexOf("morphPadding")&&
b.push(d[c]);b.sort();c=a*(b.length-1)+1;d=Math.floor(c);for(i=0;i<b.length;i++)this.points.morphTargetInfluences[b[i]]=0;b=d-1;c-=d;0<=b&&(this.points.morphTargetInfluences[b]=1-c);this.points.morphTargetInfluences[d]=c;this._time=a});this.addBackground=addBackground;this.addData=addData;this.createPoints=function(){if(void 0!==this._baseGeometry){if(!1===this.is_animated)this.points=new THREE.Mesh(this._baseGeometry,new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,morphTargets:!1}));
else{if(8>this._baseGeometry.morphTargets.length)for(var a=8-this._baseGeometry.morphTargets.length,b=0;b<=a;b++)this._baseGeometry.morphTargets.push({name:"morphPadding"+b,vertices:this._baseGeometry.vertices});this.points=new THREE.Mesh(this._baseGeometry,new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,morphTargets:!0}))}q.add(this.points)}};this.renderer=p;this.scene=q;return this};
